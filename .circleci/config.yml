# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    description: "A test of commands in CircleCi"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
      

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  
  #These jobs are added based on the udacity excercise on creating Circle-Ci
  print-hello:

    docker:
      - image: cimg/base:stable     
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello"

  print-world:

    docker:
      - image: cimg/base:stable     
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo World!"

  print-name:

    docker:
      - image: cimg/base:stable
    environment:
      MY_NAME: Idris-Aiyegusi
    steps:
      - checkout
      - run:
          name: "my name"
          command: |
            echo $MY_NAME
  
# Udacity sharing file exercise  
  save_hello_world_output:
    working_directory: ~/project
    docker:
      - image: cimg/base:stable
    
    environment:
      HELLO: "hello world"
    steps:
      - checkout
      - run:
          name: "sharing files exercise"
          command: |
            echo $HELLO > output.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - "project"

  print_output_file:
    working_directory: ~/project
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "output of file sharing"
          command: |
            cat output.txt

# Jobs for the for implementing Reusable Code
  my_jobs:
    docker:
      - image: cimg/base:stable
    steps:
      - print_pipeline_id

         

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
  hello-world-workflow:
    jobs:
      - print-hello
      - print-world:
          requires: [print-hello]
  my-name-workflow:
    jobs:
      - print-name
  sharing_output-workflow:
    jobs:
      - save_hello_world_output
      - print_output_file: 
          requires:
            - "save_hello_world_output"
  reusable_code-workflow:
    jobs:
      - my_jobs
